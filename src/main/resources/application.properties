
# 개발용 포트번호
server.port=9090

# 프로젝트, 배포하는 파일명
server.servlet.context-path=/ROOT

# 소스코드 자동감지 후 재시작
spring.devtools.livereload.enabled=true

# view에 해당하는 html의 위치
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# h2 db (개발용 DB)
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:tcp://1.234.5.158:21521/until15;Mode=Oracle
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# oracle (서비스용 DB)
# spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# spring.datasource.url=jdbc:oracle:thin:@1.234.5.158:11521/xe
# spring.datasource.username=ds200
# spring.datasource.password=pw200

# h2 또는 oracle 세션 사용
# server.servlet.session.timeout=3600
# spring.session.store-type=jdbc    
# spring.session.jdbc.initialize-schema=always

# db컨넥션 유지
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.maximum-pool-size=500
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=60000

# entity에 정의된 DDL
# create : 서버구동시 테이블 생성, 재 구동 또 생성, 데이터 초기화
# create-drop : 삭제되는 시점이 서버가 종료될때,  데이터 초기화
# update : DDL에 변화가 생길때만 생성, 데이터는 유지됨.
# validate : 엔티티와 테이를 타입또는 컬럼명이 정확한지 확인만.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# redis 세션 사용
# spring.redis.host=1.234.5.158
# spring.redis.port=16379
# spring.redis.password=ds606
# # mongodb에 사용했던 번호 ex) 200 => 0, 214 => 14, 219 => 19
# spring.redis.database=0
# server.servlet.session.timeout=3600
# spring.session.store-type=redis
# spring.session.redis.flush-mode=immediate


# 파일 업로드 제한 
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 결제 api 정보
imp_key=7781570850427636
imp_secret=a35191d9f4e9155919a125a76e56e5c0d3bbdc6fdeea5f65f4fd915ceb35098349d1affc7f760d62